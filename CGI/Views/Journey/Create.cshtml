@using Microsoft.AspNetCore.Mvc.TagHelpers
@model CGI.Models.Stopover

@{
    ViewData["Title"] = "Register Journey";
}

<body>
<script>
        async function checkAndCreateJourney() {
            let journeyId = localStorage.getItem('JourneyID');
            let userId = localStorage.getItem('User_ID');
            if (!journeyId) {
                let response = await fetch('/Journey/CreateAndGetJourneyId?userId=' + userId);
                if (response.ok) {
                    let jsonResponse = await response.json();
                    if (jsonResponse.success) {
                        localStorage.setItem('JourneyID', jsonResponse.journeyId);
                    }
                } else {
                    console.error('Failed to create a new journey:', response.statusText);
                }
            }
        }

        window.onload = function () {
            checkAndCreateJourney();
            GetStopovers();
        }
        
        function getEmission(vehicleType, distance) {
        let vehicleEmission = {
            Walking: 0,
            Bicycle: 0,
            EBicycle: 3,
            HCar: 110,
            DCar: 131,
            GCar: 149,
            ECar: 54,
            EScooter: 17,
            GScooter: 62,
            DTrain: 90,
            ETrain: 2,
            Bus: 96,
            Tram: 96,
            Metro: 96,
            GMotorcycle: 129
        };

        return vehicleEmission[vehicleType] * distance;
        }

        function GetStopovers() {
            let stopovers = JSON.parse(localStorage.getItem('Stopovers')) || [];
            let div = document.getElementById("StopoverList");
            let html = "";
            for (let i = 0; i < stopovers.length; i++) {
                let stopover = stopovers[i];
                html += "<td>" + stopover.start + " - " + stopover.end + " (" + stopover.vehicle + ", " + stopover.distance + "km)" + "</td><br>";
            }
            div.innerHTML = html;

            if (stopovers.length > 0) {
                document.getElementById("submitJourneyBtn").classList.remove("hidden");
                } else {
                document.getElementById("submitJourneyBtn").classList.add("hidden");
            }
        }

        async function submitJourney() {
            let journeyId = localStorage.getItem('JourneyID');
            let userId = localStorage.getItem('User_ID');
            let stopovers = JSON.parse(localStorage.getItem('Stopovers')) || [];

            // Update the journey in the database
            let response = await fetch('/Journey/UpdateJourney?journeyId=' + journeyId + '&userId=' + userId, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(stopovers)
            });

            if (response.ok) {
                // Remove stopovers and journey ID from LocalStorage
                localStorage.removeItem('Stopovers');
                localStorage.removeItem('JourneyID');

                // Redirect the user to the Index.cshtml in the Home controller
                window.location.href = '/Home/Index';
            } else {
                console.error('Failed to submit journey:', response.statusText);
            }
        }

        function AddStopoverToList() {
            let start = document.getElementById('startinglocation').value;
            let end = document.getElementById('endlocation').value;
            let vehicle = document.getElementById('vehicle').value;
            let distance = document.getElementById('distance').value;
            let emission = getEmission(vehicle, distance);


            if (start != "" || end != "" || distance != 0) {
                let stopovers = JSON.parse(localStorage.getItem('Stopovers')) || [];
                let stopover = {
                    start: start,
                    end: end,
                    vehicle: vehicle,
                    distance: distance,
                    emission: emission
                };
                stopovers.push(stopover);
                localStorage.setItem('Stopovers', JSON.stringify(stopovers));
                GetStopovers();
            }
        }
    </script>
    <div class="flex justify-center items-center h-screen bg-slate-200">
        <div class="block bg-slate-100 p-6 rounded-lg shadow-md shadow-slate-300 w-90 grid grid-cols-2 gap-4">
            <div class="text-lg">Register new stopover:</div>
            <br>
            <div class="block bg-slate-50 p-6 rounded-lg shadow-md shadow-slate-300 w-90">
                <form action="" onsubmit="return AddStopoverToList()">
                    
                    <label>Starting Location:</label><br>
                    <input asp-for="Start" class="shadow appearance-none border border-black rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline" id="startinglocation" placeholder="Input starting location." required>
                    <label>End Location:</label><br>
                    <input asp-for="End" class="shadow appearance-none border border-black rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline" id="endlocation" placeholder="Input end location." required>
                    <label>Vehicle:</label><br>
                    <select asp-for="VehicleType" class="shadow appearance-none border border-black rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline" id="vehicle" required>
                        <option value="Walking">Walking</option>
                        <option value="Bicycle">Bicycle</option>
                        <option value="EBicycle">E-Bicycle</option>
                        <option value="HCar">Hybrid Car</option>
                        <option value="DCar">Diesel Car</option>
                        <option value="GCar">Gasoline Car</option>
                        <option value="ECar">Electric Car</option>
                        <option value="EScooter">Electric Scooter</option>
                        <option value="GScooter">Gasoline Scooter</option>
                        <option value="DTrain">Diesel Train</option>
                        <option value="ETrain">Electric Train</option>
                        <option value="Bus">Bus</option>
                        <option value="Tram">Tram</option>
                        <option value="Metro">Metro</option>
                        <option value="GMotorcycle">Gasoline Motorcycle</option>
                    </select>

                    <label>Distance in km:</label><br>
                    <input asp-for="Distance" class="shadow appearance-none border border-black rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline" id="distance" placeholder="Input distance in km." required>
                    <button class="bg-blue-700 rounded-lg w-full text-white min-h-fit" >Add</button>
                </form>
            </div>
            <div class="block bg-slate-50 p-6 rounded-lg shadow-md shadow-slate-300 w-90 flex flex-col">
                <div>Stopovers:</div>
                <div class="overflow-y-scroll overflow-y-hidden" id="StopoverList"></div>
                <button id="submitJourneyBtn" class="bg-green-700 rounded-lg w-full text-white min-h-fit hidden mt-auto" onclick="submitJourney()">Submit Journey</button>
            </div>
        </div>
    </div>
</body>
