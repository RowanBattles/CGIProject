@using Microsoft.AspNetCore.Authentication
@model CGI.Models.Stopover

@{
    ViewData["Title"] = "Register Journey";
}

@{
    var idToken = await Context.GetTokenAsync("id_token");
    var userInfo = new CGI.Controllers.AccountController(null).GetAuth0UserInfo(idToken);
    string userId = userInfo.UserId;
}

<body>
<script>
    
        async function checkAndCreateJourney() {
            let journeyId = localStorage.getItem('JourneyID');
            if (!journeyId) {
                let response = await fetch('/Journey/CreateAndGetJourneyId?userId=@userId');
                if (response.ok) {
                    let jsonResponse = await response.json();
                    if (jsonResponse.success) {
                        localStorage.setItem('JourneyID', jsonResponse.journeyId);
                    }
                } else {
                    console.error('Failed to create a new journey:', response.statusText);
                }
            }
        }

        window.onload = function () {
            checkAndCreateJourney();
            GetStopovers();
        }

        function GetStopovers() {
            let stopovers = JSON.parse(localStorage.getItem('Stopovers')) || [];
            let div = document.getElementById("StopoverList");
            let html = "";
            for (let i = 0; i < stopovers.length; i++) {
                let stopover = stopovers[i];
                html += "<td>" + stopover.start + " - " + stopover.end + " (" + stopover.vehicle + ", " + stopover.distance + "km)" + "</td><br>";
            }
            div.innerHTML = html;
        }


        function AddStopoverToList() {
            let start = document.getElementById('startinglocation').value;
            let end = document.getElementById('endlocation').value;
            let vehicle = document.getElementById('vehicle').value;
            let distance = document.getElementById('distance').value;

            if (start != "" || end != "" || distance != 0) {
                let stopovers = JSON.parse(localStorage.getItem('Stopovers')) || [];
                let stopover = {
                    start: start,
                    end: end,
                    vehicle: vehicle,
                    distance: distance,
                    emission: 0 // You can add a function to calculate the emission based on the distance and vehicle type
                };
                stopovers.push(stopover);
                localStorage.setItem('Stopovers', JSON.stringify(stopovers));
                GetStopovers();
            }
        }
    </script>
    <div class="flex justify-center items-center h-screen bg-slate-200">
        <div class="block bg-slate-100 p-6 rounded-lg shadow-md shadow-slate-300 w-90">
            <div class="text-lg">Register new journey:</div>
            <br>
            <div class="block bg-slate-50 p-6 rounded-lg shadow-md shadow-slate-300 w-90">
                <form action="">
                    <label>Starting Location:</label><br>
                    <input asp-for="Start" class="shadow appearance-none border border-black rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline" id="startinglocation" placeholder="Input starting location.">
                    <label>End Location:</label><br>
                    <input asp-for="End" class="shadow appearance-none border border-black rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline" id="endlocation" placeholder="Input end location.">
                    <label>Vehicle:</label><br>
                    <input asp-for="VehicleID" class="shadow appearance-none border border-black rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline" id="vehicle" placeholder="Input vehicle used for travel.">
                    <label>Distance in km:</label><br>
                    <input asp-for="Distance" class="shadow appearance-none border border-black rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline" id="distance" placeholder="Input distance in km.">
                    <button class="bg-blue-700 rounded-lg w-full text-white min-h-fit" onclick="AddStopoverToList()">Add</button>
                </form>
            </div>
            <div id="StopoverList"></div>
        </div>
    </div>
</body>